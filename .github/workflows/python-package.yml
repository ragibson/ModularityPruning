# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m venv env
          source env/bin/activate
          python -m pip install --upgrade pip

          # various build requirements for Python 3.10 Github Action
          sudo apt install autoconf automake bison build-essential cython flex gcc gfortran libfreetype-dev \
          libfreetype6 libfreetype6-dev libigraph0-dev libigraph0v5 liblapack-dev libopenblas-dev libxml2 \
          libxml2-dev pkg-config python-dev python3-dev python3-freetype python3-igraph zlib1g-dev

          pip install --upgrade setuptools wheel

          pip install .

          pip install cython flake8 pytest

          # the following don't seem to be handled correctly in pip dependency
          # checking for the Python 3.10 GitHub Action?
          pip install igraph louvain matplotlib numpy pandas pybind11 pythran scipy
      - name: Lint with flake8
        run: |
          source env/bin/activate
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude env/
          # exit-zero treats all errors as warnings
          flake8 . --count --exit-zero --max-complexity=15 --max-line-length=120 --statistics --exclude env/
      - name: Test with pytest
        run: |
          source env/bin/activate
          pytest tests/
